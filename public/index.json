[
{
	"uri": "//localhost:1313/1-introduction/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "VPC Dual Stack An increasing number of organizations are adopting IPv6 in their environments due to the exhaustion of the public IPv4 space, the scarcity of private IPv4 addresses—especially in large-scale networks—and the need to provide services accessible to IPv6-only clients. An intermediate step toward full IPv6 support is the design of an IPv4/IPv6 dual-stack architecture, which leverages both versions of the IP protocol simultaneously. Amazon Elastic Container Registry (Amazon ECR) is an AWS managed container image registry service that is secure, scalable, and reliable. Amazon ECR supports private repositories with resource-based permissions using AWS IAM. This is so that specified users or Amazon EC2 instances can access your container repositories and images. You can use your preferred CLI to push, pull, and manage Docker images, Open Container Initiative (OCI) images, and OCI compatible artifacts. Amazon Elastic Container Service (Amazon ECS) is a fully managed container orchestration service that helps you easily deploy, manage, and scale containerized applications. As a fully managed service, Amazon ECS comes with AWS configuration and operational best practices built-in. It\u0026rsquo;s integrated with both AWS tools, such as Amazon Elastic Container Registry, and third-party tools, such as Docker. This integration makes it easier for teams to focus on building the applications, not the environment. You can run and scale your container workloads across AWS Regions in the cloud, and on-premises, without the complexity of managing a control plane. "
},
{
	"uri": "//localhost:1313/",
	"title": "Setting up an AWS account",
	"tags": [],
	"description": "",
	"content": "Creating your first AWS account Overview In this first lab, you will be creating your new AWS account and use Multi-factor Authentication (MFA) to improve your account security. Next, you will create an Administrator Group and Admin User to manage access to resources in your account instead of using the root user. Finally, we will step through account authentication with AWS Support in the event you experience authentication problems.\nAWS Account An AWS account is the basic container for all the AWS resources you can create as an AWS customer. By default, each AWS account will have a root user. The root user has full access within your AWS account, and root user permissions cannot be limited. When you first create your AWS account, you will be assessing it as the root user.\nAs a best practice, do not use the AWS account root user for any task where it\u0026rsquo;s not required. Instead, create a new IAM user for each person that requires administrator access. Thereafter, the users in the administrators user group should set up the user groups, users, and so on, for the AWS account. All future interaction should be through the AWS account\u0026rsquo;s users and their own keys instead of the root user. However, to perform some account and service management tasks, you must log in using the root user credentials.\nMulti-Factor Authentication (MFA) MFA adds extra security because it requires users to provide unique authentication from an AWS supported MFA mechanism in addition to their regular sign-in credentials when they access AWS websites or services.\nIAM User Group An IAM user group is a collection of IAM users. User groups let you specify permissions for multiple users, which can make it easier to manage the permissions for those users. Any user in that user group automatically has the permissions that are assigned to the user group.\nIAM User An IAM user is an entity that you create in AWS to represent the person or application that uses it to interact with AWS. A user in AWS consists of a name and credentials. Please note that an IAM user with administrator permissions is not the same thing as the AWS account root user.\nAWS Support AWS Basic Support offers all AWS customers access to our Resource Center, Service Health Dashboard, Product FAQs, Discussion Forums, and Support for Health Checks – at no additional charge. Customers who desire a deeper level of support can subscribe to AWS Support at the Developer, Business, or Enterprise level.\nCustomers who choose AWS Support gain one-on-one, fast-response support from AWS engineers. The service helps customers use AWS\u0026rsquo;s products and features. With pay-by-the-month pricing and unlimited support cases, customers are freed from long-term commitments. Customers with operational issues or technical questions can contact a team of support engineers and receive predictable response times and personalized support.\nMain Content Creating a new AWS Account Setting up MFA for the AWS Account root user Creating an Administrator Accounts and Groups Getting support for Account Authentication "
},
{
	"uri": "//localhost:1313/2-setup-resource/",
	"title": "MFA for AWS Accounts",
	"tags": [],
	"description": "",
	"content": "Multi-Factor Authentication (MFA) Setup During the authentication process, you will need to utilize three different MFA devices to ensure the security of your account.\nVirtual MFA Devices (Smartphone Apps): Install the following apps on your smartphone and set them up for MFA:\nMicrosoft Authenticator Google Authenticator Okta Verify Hard U2F Security Key: Obtain a hard U2F security key to enhance your account\u0026rsquo;s security.\nOther Hardware MFA Devices (e.g., Gemalto Security Keys): Consider using additional hardware MFA devices for added protection.\nContent Content 1. Setup with Virtual MFA Device 2. Setup with U2F Security Key 3. Setup with Other Hardware MFA Device 1. Setup with Virtual MFA Device To set up your virtual MFA device using apps on your smartphone, follow these steps:\nStep 1: Install the Microsoft Authenticator, Google Authenticator, and Okta Verify apps on your smartphone. Step 2: Open the app and follow the on-screen instructions to add your account. Step 3: Use the app-generated codes during the MFA authentication process. 2. Setup with U2F Security Key Setting up your U2F security key involves the following steps:\nStep 1: Obtain a compatible U2F security key. Step 2: Connect the key to your device\u0026rsquo;s USB port. Step 3: During authentication, insert the key and follow the prompts to complete the process. 3. Setup with Other Hardware MFA Device Consider using hardware MFA devices like Gemalto security keys for an extra layer of security:\nStep 1: Acquire a Gemalto security key or a similar hardware device. Step 2: Connect and set up the device as per the manufacturer\u0026rsquo;s instructions. Step 3: Integrate the device into your MFA authentication workflow. Remember to keep your MFA devices secure and follow best practices to ensure the safety of your account.\n"
},
{
	"uri": "//localhost:1313/3-push-image-to-ecr-and-run-ecs-cluster/",
	"title": "Create Admin Group and Admin User",
	"tags": [],
	"description": "",
	"content": "Creating an Admin Group Log in to the Control Panel on the AWS Web Service page.\nClick on your account name at the top right corner and select My Security Credentials.\nNote: If you don\u0026rsquo;t see the My Security Credentials menu, you can click on the search icon and type IAM. Then click on the IAM service to access the IAM management interface.\nOn the left sidebar, choose User Groups, and then select Create Group.\nUnder the Name the group section, enter the Group name (For example: AdminGroup), and scroll down.\nIn the Attach permissions policies section, type AdministratorAccess in the search bar and select it. Finally, click on Create Group.\nThe creation of the admin group is complete.\nCreate Admin User You can use the AWS Management Console to create IAM users.\nFollow the sign-in procedure appropriate to your user type as described in the topic How to sign in to AWS in the AWS Sign-In User Guide.\nOn the Console Home page, select the IAM service.\nIn the navigation pane, select Users, and then select Add users.\nOn the Specify user details page, under User details, enter the new user\u0026rsquo;s name in the User name field. This will be their sign-in name for AWS.\nNote: User names can be up to 64 letters, digits, and certain characters: plus (+), equal (=), comma (,), period (.), at sign (@), underscore (_), and hyphen (-). User names must be unique within an account, and they are case-sensitive when used in policies or ARNs. However, they are case-insensitive during the sign-in process.\nSelect Provide user access to the AWS Management Console. This generates AWS Management Console sign-in credentials for the new user.\nYou\u0026rsquo;ll be asked whether you\u0026rsquo;re providing console access to a person. It\u0026rsquo;s recommended to create users in IAM Identity Center rather than IAM. To switch to creating the user in IAM Identity Center, select Specify a user in Identity Center.\nIf IAM Identity Center is not enabled, this option takes you to the service page in the console to enable it. If IAM Identity Center is enabled, this option takes you to the Specify user details page in IAM Identity Center. If you cannot use IAM Identity Center, select I want to create an IAM user and continue following this procedure.\nFor Console password, choose one of the following:\nAutogenerated password: The user gets a randomly generated password that adheres to the account password policy. You can view or download the password on the Retrieve password page. Custom password: Assign a password that you enter in the box. Optionally, select Users must create a new password at next sign-in (recommended) to ensure the user changes their password the first time they sign in.\nSelect Next.\nOn the Set permissions page, choose how to assign permissions for this user:\nAdd user to group: Assign the user to one or more groups with existing permissions policies. Copy permissions: Copy permissions from an existing user with similar needs. Attach policies directly: Attach AWS managed or custom policies directly to the user. It\u0026rsquo;s recommended to attach policies to groups whenever possible.\nOptionally, set a permissions boundary in the Permissions boundary section. This is an advanced feature that controls maximum permissions.\nSelect Next.\nOptionally, on the Review and create page, under Tags, you can attach metadata to the user using key-value pairs.\nReview your choices, and when ready, select Create user.\nOn the Retrieve password page, get the password assigned to the user:\nSelect Show next to the password to view it manually.\nSelect Download .csv to save the user\u0026rsquo;s sign-in credentials as a .csv file.\nSelect Email sign-in instructions to customize and send an email to the user. The email includes their user name and a URL to the account sign-in page:\nUser name URL: https://AWS-account-ID-or-alias.signin.aws.amazon.com/console Note: The user\u0026rsquo;s password is not included in the email.\nIf the user also requires access keys, refer to Managing access keys for IAM users.\nLogin to AdminUser Return to the IAM service, and select Users in the left sidebar. Click on the name of the IAM User you just selected. In the Summary section, select the Security credentials tab. Look at the line Summary: Console sign-in link and copy the link next to it. This is the link you use to log in to the IAM User. Open an incognito tab of the browser you are using and paste the link into the search bar. Incognito tab login allows you to log in to AWS with an IAM User without having to log out of the root user in the main tab.\nEnter the correct IAM User name and password that you entered in the create IAM User section above. Click sign in. Congratulations, you have successfully accessed your account as an IAM User AdminUser. In The next step, we will switch to using IAM Role to improve the security of your account. Creating Access Key for AWS Root User Minimum Required Permissions To perform the following steps, you need at least the following IAM (Identity and Access Management) permissions:\nYou must log in as the root user of AWS, which does not require any additional IAM permissions. These steps cannot be performed as an IAM user or a role.\nUse the email address and password of your AWS account to sign in to the AWS Management Console as the root user.\nIn the top-right corner of the console, select your account name or number, then choose \u0026ldquo;Security Credentials\u0026rdquo;.\nUnder \u0026ldquo;Access keys,\u0026rdquo; select \u0026ldquo;Create access key.\u0026rdquo; If this option is unavailable, it means you have the maximum number of access keys. You must delete one of the existing access keys before creating a new one. For more information, see IAM Object Quotas in the IAM User Guide.\nOn the \u0026ldquo;Alternatives to root user access keys\u0026rdquo; page, consider security recommendations. To proceed, check the box and then select \u0026ldquo;Create access key.\u0026rdquo;\nOn the \u0026ldquo;Retrieve access key\u0026rdquo; page, your Access Key ID will be displayed.\nUnder the \u0026ldquo;Secret access key\u0026rdquo; section, select \u0026ldquo;Show,\u0026rdquo; then copy the Access Key ID and Secret Key from your browser window and paste them into a secure location. Alternatively, you can select \u0026ldquo;Download .csv file\u0026rdquo; to download a file named \u0026ldquo;rootkey.csv\u0026rdquo; containing the Access Key ID and Secret Key. Keep the file in a secure location.\nSelect \u0026ldquo;Done.\u0026rdquo; When you no longer need the access key, we recommend either deleting it or at least considering disabling it to prevent misuse.\nNote: These steps apply only to the root user account on AWS. For IAM users or roles, the process of creating and managing access keys may differ.\nRevoking Access Key for Root User on AWS Minimum Permissions To perform the following steps, you must have at least the following IAM (Identity and Access Management) permissions:\nYou must be logged in as the root user of your AWS account, this does not require any additional AWS Identity and Access Management (IAM) permissions. You cannot perform these steps as an IAM user or a role. Use the email address and password of your AWS account to sign in to the AWS Management Console as the root user. In the top-right corner of the console, select your account name or number, then choose Security Credentials. Under Access keys, select the access key you wish to delete, then in the Actions section, choose Delete. Note Alternatively, you can choose to Deactivate an access key instead of permanently deleting it. This allows you to continue using it in the future without changing both the key ID and secret key. While the key is deactivated, any requests using it in AWS API requests will fail with an \u0026ldquo;access denied\u0026rdquo; error.\nIn the Delete dialog, select Deactivate, enter the access key ID to confirm your intention to delete it, then choose Delete.\n"
},
{
	"uri": "//localhost:1313/4-setup-application-load-balancer/",
	"title": "Account Authentication Support",
	"tags": [],
	"description": "",
	"content": "Content:\nCheck the information Create a support case with AWS Support During the AWS account creation process, at the contact phone number verification step, sometimes there will be a situation where no SMS or calls from AWS will be received. In that case, follow these steps to complete the account information verification:\nCheck the information First, double-check your account information and make sure it\u0026rsquo;s entered correctly:\nYou have entered the phone number information and selected the correct international area code to receive the call. If you use a mobile phone, check your phone to make sure you are still within range to receive calls. Payment method information has been entered correctly. Make sure that the phone number you provide in your AWS account is reachable.\nCreate a support case with AWS Support After checking that the information is correct but still has not received the verification call, AWS Support will assist you to activate your account manually.\nGo to the AWS Support console, select Create case. Select Account and billing support and enter the support information: Type: select Account. Category: select Activation. Subject: briefly write down your situation (eg Did not receive an SMS message or call for verification) Description: Provide details of the situation encountered and information about the time you need support to activate the account. Attachments: Attach an image describing the authentication step you are facing. Under Contact options, select Chat under Contact methods. Select Submit. 5. The AWS Support team will contact and assist in activating your account.\nYou can create a support request with AWS Support even if your account is not activated.\n"
},
{
	"uri": "//localhost:1313/2-setup-resource/2.1-create-iam-user-and-iam-role/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/2-setup-resource/2.2-create-vpc/2.2.1-vpc/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/2-setup-resource/2.2-create-vpc/2.2.2-subnets/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/2-setup-resource/2.2-create-vpc/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/5-cleanupresource/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]